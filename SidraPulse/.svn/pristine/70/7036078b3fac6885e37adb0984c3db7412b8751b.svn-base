package com.atomix.adapter;

import java.util.ArrayList;
import java.util.HashMap;

import android.app.Activity;
import android.content.Intent;
import android.os.Parcelable;
import android.support.v4.view.PagerAdapter;
import android.support.v4.view.ViewPager;
import android.util.Log;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup.LayoutParams;
import android.widget.ImageView;
import android.widget.ImageView.ScaleType;

import com.androidquery.AQuery;
import com.androidquery.callback.BitmapAjaxCallback;
import com.atomix.datamodel.GalleryDetailsInfo;
import com.atomix.sidrainfo.ConstantValues;
import com.atomix.sidrainfo.SidraPulseApp;
import com.atomix.sidrapulse.ViewPagerActivity;

public class ViewPagerAdapter extends PagerAdapter {

	private Activity activity;
	private ArrayList<HashMap<String, String>> list = new ArrayList<HashMap<String, String>>();
	private boolean isClickable;
	private boolean isImagePathLocal;
	private int typeIs;
	
	public ViewPagerAdapter(Activity act, ArrayList<HashMap<String, String>> list, boolean isImagePathLocal, boolean isClickable, int typeIs) {
		this.list = list;
		activity = act;
		this.isClickable = isClickable;
		this.isImagePathLocal = isImagePathLocal;
		this.typeIs = typeIs;
	}

	public int getCount() {
		if (list == null)
			return 0;
		else
			return list.size();
	}

	public Object instantiateItem(View collection, final int position) {
		ImageView imgView = new ImageView(activity);
		//imgView.setScaleType(ImageView.ScaleType.CENTER_CROP);
		imgView.setLayoutParams(new LayoutParams(LayoutParams.MATCH_PARENT, LayoutParams.MATCH_PARENT));
		imgView.setScaleType(ScaleType.CENTER_CROP);
		//new AQuery(activity).id(imgView).image(ConstantValues.FILE_BASE_URL+list.get(position).get("url"), true, true, 300, R.drawable.image);
		AQuery aq = new AQuery(activity);
		BitmapAjaxCallback bmCallBack = new BitmapAjaxCallback();
		if(isImagePathLocal) {
			Log.e("here here","------");
			if(list.get(position).get("url").startsWith("upload")) {
				//String [] photoNameArray = list.get(position).get("url").split("/");
				bmCallBack.url(ConstantValues.FILE_BASE_URL+ list.get(position).get("url")).targetWidth(300).rotate(true);
				Log.i("IMAGE_URL local in if","***" + list.get(position).get("url"));
			}  else if(list.get(position).get("url").startsWith("public")) {
				bmCallBack.url(ConstantValues.FILE_BASE_URL + list.get(position).get("url")).targetWidth(300).rotate(true);
				Log.i("IMAGE_URL local in else if","***" + list.get(position).get("url"));
			}else {
				bmCallBack.url(list.get(position).get("url")).targetWidth(300).rotate(true);
				Log.i("IMAGE_URL local in else","***" + list.get(position).get("url"));
			}
		} else {
			bmCallBack.url(ConstantValues.FILE_BASE_URL+list.get(position).get("url")).targetWidth(300).rotate(true);
			Log.i("POSTED_URL","" + ConstantValues.FILE_BASE_URL+list.get(position).get("url"));
		}
		bmCallBack.memCache(true);
		bmCallBack.fileCache(true);
		aq.id(imgView).image(bmCallBack);
		
		imgView.setPadding(10, 10, 10, 10);
		((ViewPager) collection).addView(imgView, 0);
		
		if(isClickable) {
			imgView.setEnabled(true);
		} else {
			imgView.setEnabled(false);
		}
		
		imgView.setOnClickListener(new OnClickListener() {
			
			@Override
			public void onClick(View v) {
				/*ArrayList<GalleryDetailsInfo> arrayList = new ArrayList<GalleryDetailsInfo>();
				
				for(int i = 0; i < list.size(); i++) {
					GalleryDetailsInfo info = new GalleryDetailsInfo();
					info.setMediaType(1);
					Log.e("path of full view", "---"+list.get(i).get("url").toString());
					info.setImageOrVideoUrl(list.get(i).get("url").toString());
					arrayList.add(info);
				}
				
				SidraPulseApp.getInstance().setGalleryDetailsInfoList(arrayList);*/
				
				Intent intent = new Intent(activity, ViewPagerActivity.class);
				intent.putExtra("click_position", position);
				intent.putExtra("type_is", typeIs);
				intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
				activity.getApplicationContext().startActivity(intent);
			}
		});
		
		return imgView; 
	}

	@Override
	public void destroyItem(View arg0, int arg1, Object arg2) {
		((ViewPager) arg0).removeView((View) arg2);
	}

	@Override
	public boolean isViewFromObject(View arg0, Object arg1) {
		return arg0 == ((View) arg1);
	}

	@Override
	public Parcelable saveState() {
		return null;
	}
}
